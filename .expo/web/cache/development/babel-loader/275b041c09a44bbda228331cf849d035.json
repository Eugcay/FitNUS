{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\CS Projects\\\\FitNUS Git\\\\FitNUS\\\\routes\\\\Main.js\";\n\nimport React, { useEffect } from \"react\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Tracker from \"../screens/tracker\";\nimport FitBudStack from \"./fitBudStack\";\nimport Jio from \"../screens/jio\";\nimport ProfileStack from \"./profileStack\";\nimport { clearData, getUser, getUserHistory } from \"../store/actions/user\";\nvar Tab = createMaterialBottomTabNavigator();\nexport var Main = function Main(props) {\n  useEffect(function () {\n    props.clearData();\n    props.getUser();\n    props.getUserHistory();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Tab.Navigator, {\n    initialRouteName: \"FitBud\",\n    barStyle: {\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"FitBud\",\n    component: FitBudStack,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"arm-flex\",\n          color: color,\n          size: 25,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarColor: \"#0B2A59\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Jio\",\n    component: Jio,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account-group\",\n          color: color,\n          size: 25,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarColor: \"#0B2A59\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Tracker\",\n    component: Tracker,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(Feather, {\n          name: \"activity\",\n          color: color,\n          size: 25,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarColor: \"#0B2A59\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileStack,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account-circle\",\n          color: color,\n          size: 25,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarColor: \"#0B2A59\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.user.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    getUser: getUser,\n    getUserHistory: getUserHistory,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["D:/CS Projects/FitNUS Git/FitNUS/routes/Main.js"],"names":["React","useEffect","createMaterialBottomTabNavigator","MaterialCommunityIcons","Feather","connect","bindActionCreators","Tracker","FitBudStack","Jio","ProfileStack","clearData","getUser","getUserHistory","Tab","Main","props","color","tabBarIcon","size","tabBarColor","mapStateToProps","store","currentUser","user","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport Tracker from \"../screens/tracker\";\r\nimport FitBudStack from \"./fitBudStack\";\r\nimport Jio from \"../screens/jio\";\r\nimport ProfileStack from \"./profileStack\";\r\n\r\nimport { clearData, getUser, getUserHistory } from \"../store/actions/user\";\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nexport const Main = (props) => {\r\n  useEffect(() => {\r\n    props.clearData();\r\n    props.getUser();\r\n    props.getUserHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Tab.Navigator initialRouteName=\"FitBud\" barStyle={{ color: \"black\" }}>\r\n        <Tab.Screen\r\n          name=\"FitBud\"\r\n          component={FitBudStack}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons name=\"arm-flex\" color={color} size={25} />\r\n            ),\r\n            tabBarColor: \"#0B2A59\",\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Jio\"\r\n          component={Jio}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"account-group\"\r\n                color={color}\r\n                size={25}\r\n              />\r\n            ),\r\n            tabBarColor: \"#0B2A59\",\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Tracker\"\r\n          component={Tracker}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Feather name=\"activity\" color={color} size={25} />\r\n            ),\r\n            tabBarColor: \"#0B2A59\",\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Profile\"\r\n          component={ProfileStack}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"account-circle\"\r\n                color={color}\r\n                size={25}\r\n              />\r\n            ),\r\n            tabBarColor: \"#0B2A59\",\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.user.currentUser,\r\n});\r\n\r\nconst mapDispatchProps = (dispatch) =>\r\n  bindActionCreators({ getUser, getUserHistory, clearData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}