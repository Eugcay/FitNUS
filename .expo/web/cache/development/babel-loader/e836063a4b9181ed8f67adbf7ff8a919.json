{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\CS Projects\\\\FitNUS Git\\\\FitNUS\\\\screens\\\\tracker.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ProfilePicture from \"../components/trackerComponents/profilePicture\";\nimport Greeting from \"../components/trackerComponents/greeting\";\nimport DayPicker from \"../components/trackerComponents/dayPicker\";\nimport StatBar from \"../components/trackerComponents/statBar\";\nimport Donut from \"../components/Donut\";\nimport { connect } from \"react-redux\";\nimport { SET_USER } from \"../store/actions/types\";\n\nvar Tracker = function Tracker(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weekly = _useState4[0],\n      setWeekly = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      monthly = _useState6[0],\n      setMonthly = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      goals = _useState8[0],\n      setGoals = _useState8[1];\n\n  useEffect(function () {\n    var getStats = function getStats(arr) {\n      return arr.reduce(function (x, y) {\n        return {\n          calories: x.calories + y.calories,\n          duration: x.duration + y.duration\n        };\n      }, {\n        calories: 0,\n        duration: 0\n      });\n    };\n\n    var today = new Date();\n    var tot = getStats(props.history);\n    var week = getStats(props.history.filter(function (doc) {\n      return Date.now() - doc.date.seconds * 1000 < 7 * 24 * 3600 * 1000;\n    }));\n    var month = getStats(props.history.filter(function (doc) {\n      return today.getMonth() === new Date(doc.date.seconds * 1000).getMonth();\n    }));\n    setTotal(tot);\n    setWeekly(week);\n    setMonthly(month);\n    setGoals({\n      calories: props.currentUser.caloriesGoal,\n      duration: props.currentUser.durationGoal,\n      distance: props.currentUser.distanceGoal,\n      workouts: props.currentUser.workoutGoal\n    });\n    console.log(goals);\n  }, [props.history, props.currentUser]);\n  var calories = {\n    val: 1405,\n    max: 1300,\n    units: \"cal\",\n    color: \"gold\"\n  };\n  var time = {\n    val: 100,\n    max: 200,\n    units: \"min\",\n    color: \"green\"\n  };\n  var distance = {\n    val: 4.8,\n    max: 6,\n    units: \"km\",\n    color: \"tomato\"\n  };\n\n  var _useState9 = useState(calories),\n      _useState10 = _slicedToArray(_useState9, 2),\n      stats = _useState10[0],\n      setStats = _useState10[1];\n\n  var _useState11 = useState({\n    calories: true,\n    time: false,\n    distance: false\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      donut = _useState12[0],\n      setDonut = _useState12[1];\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfilePicture, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.greeting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(Greeting, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.datapicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setStats(calories);\n      setDonut({\n        calories: true,\n        time: false,\n        distance: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Calories\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setStats(time);\n      setDonut({\n        calories: false,\n        time: true,\n        distance: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Time\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setStats(distance);\n      setDonut({\n        calories: false,\n        time: false,\n        distance: true\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Distance\")))), React.createElement(View, {\n    style: styles.daypicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, React.createElement(DayPicker, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.statchart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, donut.calories && React.createElement(Donut, {\n    val: calories.val,\n    max: calories.max,\n    color: calories.color,\n    units: calories.units,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), donut.time && React.createElement(Donut, {\n    val: time.val,\n    max: time.max,\n    color: time.color,\n    units: time.units,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), donut.distance && React.createElement(Donut, {\n    val: distance.val,\n    max: distance.max,\n    color: distance.color,\n    units: distance.units,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.statbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, React.createElement(StatBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  button: {\n    backgroundColor: \"#0B2A59\",\n    width: \"30%\",\n    height: 45,\n    borderRadius: 15\n  },\n  text: {\n    textAlign: \"center\",\n    paddingTop: 13,\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  greeting: {\n    paddingLeft: 20,\n    paddingTop: 10\n  },\n  datapicker: {\n    paddingTop: 10\n  },\n  daypicker: {\n    paddingTop: 10\n  },\n  statchart: {\n    paddingTop: 0,\n    alignContent: \"center\"\n  },\n  statbar: {\n    paddingTop: 0,\n    alignContent: \"center\",\n    height: 150\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    history: store.user.history,\n    currentUser: store.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(Tracker);","map":{"version":3,"sources":["D:/CS Projects/FitNUS Git/FitNUS/screens/tracker.js"],"names":["React","useState","useEffect","ProfilePicture","Greeting","DayPicker","StatBar","Donut","connect","SET_USER","Tracker","props","total","setTotal","weekly","setWeekly","monthly","setMonthly","goals","setGoals","getStats","arr","reduce","x","y","calories","duration","today","Date","tot","history","week","filter","doc","now","date","seconds","month","getMonth","currentUser","caloriesGoal","durationGoal","distance","distanceGoal","workouts","workoutGoal","console","log","val","max","units","color","time","stats","setStats","donut","setDonut","styles","greeting","datapicker","container","button","text","daypicker","statchart","statbar","StyleSheet","create","flex","flexDirection","justifyContent","backgroundColor","width","height","borderRadius","textAlign","paddingTop","fontWeight","paddingLeft","alignContent","mapStateToProps","store","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport ProfilePicture from \"../components/trackerComponents/profilePicture\";\r\n//import MenuButton from \"../components/trackerComponents/menuButton\";\r\nimport Greeting from \"../components/trackerComponents/greeting\";\r\nimport DayPicker from \"../components/trackerComponents/dayPicker\";\r\nimport StatBar from \"../components/trackerComponents/statBar\";\r\nimport Donut from \"../components/Donut\";\r\nimport { connect } from \"react-redux\";\r\nimport { SET_USER } from \"../store/actions/types\";\r\n\r\nconst Tracker = (props) => {\r\n  const [total, setTotal] = useState({});\r\n  const [weekly, setWeekly] = useState({});\r\n  const [monthly, setMonthly] = useState({});\r\n  const [goals, setGoals] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getStats = (arr) =>\r\n      arr.reduce(\r\n        (x, y) => ({\r\n          calories: x.calories + y.calories,\r\n          duration: x.duration + y.duration,\r\n        }),\r\n        {\r\n          calories: 0,\r\n          duration: 0,\r\n        }\r\n      );\r\n\r\n    const today = new Date();\r\n\r\n    const tot = getStats(props.history);\r\n    const week = getStats(\r\n      props.history.filter(\r\n        (doc) => Date.now() - doc.date.seconds * 1000 < 7 * 24 * 3600 * 1000\r\n      )\r\n    );\r\n    const month = getStats(\r\n      props.history.filter(\r\n        (doc) =>\r\n          today.getMonth() === new Date(doc.date.seconds * 1000).getMonth()\r\n      )\r\n    );\r\n\r\n    setTotal(tot);\r\n    setWeekly(week);\r\n    setMonthly(month);\r\n    setGoals({\r\n      calories: props.currentUser.caloriesGoal,\r\n      duration: props.currentUser.durationGoal,\r\n      distance: props.currentUser.distanceGoal,\r\n      workouts: props.currentUser.workoutGoal,\r\n    });\r\n\r\n    console.log(goals);\r\n  }, [props.history, props.currentUser]);\r\n\r\n  const calories = {\r\n    val: 1405,\r\n    max: 1300,\r\n    units: \"cal\",\r\n    color: \"gold\",\r\n  };\r\n\r\n  const time = {\r\n    val: 100,\r\n    max: 200,\r\n    units: \"min\",\r\n    color: \"green\",\r\n  };\r\n\r\n  const distance = {\r\n    val: 4.8,\r\n    max: 6,\r\n    units: \"km\",\r\n    color: \"tomato\",\r\n  };\r\n\r\n  const [stats, setStats] = useState(calories);\r\n  const [donut, setDonut] = useState({\r\n    calories: true,\r\n    time: false,\r\n    distance: false,\r\n  });\r\n\r\n  return (\r\n    <ScrollView>\r\n      <ProfilePicture />\r\n      <View style={styles.greeting}>\r\n        <Greeting />\r\n      </View>\r\n      {/* <MenuButton /> */}\r\n      <View style={styles.datapicker}>\r\n        <View style={styles.container}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setStats(calories);\r\n              setDonut({ calories: true, time: false, distance: false });\r\n            }}\r\n          >\r\n            <Text style={styles.text}>Calories</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setStats(time);\r\n              setDonut({ calories: false, time: true, distance: false });\r\n            }}\r\n          >\r\n            <Text style={styles.text}>Time</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setStats(distance);\r\n              setDonut({ calories: false, time: false, distance: true });\r\n            }}\r\n          >\r\n            <Text style={styles.text}>Distance</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <View style={styles.daypicker}>\r\n        <DayPicker />\r\n      </View>\r\n      <View style={styles.statchart}>\r\n        {donut.calories && (\r\n          <Donut\r\n            val={calories.val}\r\n            max={calories.max}\r\n            color={calories.color}\r\n            units={calories.units}\r\n          />\r\n        )}\r\n        {donut.time && (\r\n          <Donut\r\n            val={time.val}\r\n            max={time.max}\r\n            color={time.color}\r\n            units={time.units}\r\n          />\r\n        )}\r\n        {donut.distance && (\r\n          <Donut\r\n            val={distance.val}\r\n            max={distance.max}\r\n            color={distance.color}\r\n            units={distance.units}\r\n          />\r\n        )}\r\n      </View>\r\n      <View style={styles.statbar}>\r\n        <StatBar />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#0B2A59\",\r\n    width: \"30%\",\r\n    height: 45,\r\n    borderRadius: 15,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    paddingTop: 13,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  greeting: {\r\n    paddingLeft: 20,\r\n    paddingTop: 10,\r\n  },\r\n  datapicker: {\r\n    paddingTop: 10,\r\n  },\r\n  daypicker: {\r\n    paddingTop: 10,\r\n  },\r\n  statchart: {\r\n    paddingTop: 0,\r\n    alignContent: \"center\",\r\n  },\r\n\r\n  statbar: {\r\n    paddingTop: 0,\r\n    alignContent: \"center\",\r\n    height: 150,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (store) => ({\r\n  history: store.user.history,\r\n  currentUser: store.user.currentUser,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Tracker);\r\n\r\n// export default function Tracker({ navigation }) {\r\n//   const [calories, setCalories] = useState(0);\r\n//   const [loading, setLoading] = useState(true)\r\n\r\n//   useEffect(() => {\r\n//     const getCalories = async () => {\r\n//         await getUserHistory().onSnapshot(snapshot => {\r\n//             const cal = snapshot.data().calories ? snapshot.data().calories : 0\r\n//             setCalories(cal)\r\n//             console.log(calories)\r\n//         })\r\n//         setLoading(false)\r\n//     }\r\n\r\n//     getCalories()\r\n//   }, []);\r\n\r\n//   return (\r\n//     <View>\r\n//       { loading ? (<Text>Fitness Tracker</Text>) : (<Text>{calories}</Text>)}\r\n//     </View>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}