{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\CS Projects\\\\FitNUS Git\\\\FitNUS\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginStack from \"./routes/loginStack\";\nimport Main from \"./routes/Main\";\nimport firebase from \"firebase\";\nimport { firebaseConfig } from \"./config\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as Linking from \"expo-linking\";\nimport config from \"./linking\";\nimport Spinner from \"./components/Spinner\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nvar prefix = Linking.createURL(\"/\");\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.linking = {\n      prefixes: [prefix],\n      config: config\n    };\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }\n        }, React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(Provider, {\n          store: Store,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        }, React.createElement(NavigationContainer, {\n          linking: this.linking,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }, loggedIn ? React.createElement(Stack.Navigator, {\n          initialRouteName: \"Main\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Main\",\n          component: Main,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        })) : React.createElement(LoginStack, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"sources":["D:/CS Projects/FitNUS Git/FitNUS/App.js"],"names":["React","Component","NavigationContainer","LoginStack","Main","firebase","firebaseConfig","createStackNavigator","Linking","config","Spinner","Provider","Store","prefix","createURL","apps","length","initializeApp","Stack","App","props","linking","prefixes","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","alignItems","styles","StyleSheet","create","container","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport LoginStack from \"./routes/loginStack\";\r\nimport Main from \"./routes/Main\";\r\nimport firebase from \"firebase\";\r\nimport { firebaseConfig } from \"./config\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport * as Linking from \"expo-linking\";\r\nimport config from \"./linking\";\r\nimport Spinner from \"./components/Spinner\";\r\nimport { Provider } from \"react-redux\";\r\nimport Store from \"./store\";\r\n\r\nconst prefix = Linking.createURL(\"/\");\r\n\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  linking = {\r\n    prefixes: [prefix],\r\n    config: config,\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        this.setState({\r\n          loggedIn: false,\r\n          loaded: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loggedIn: true,\r\n          loaded: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n    if (!loaded) {\r\n      return (\r\n        <View\r\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n        >\r\n          <Spinner />\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <Provider store={Store}>\r\n          <NavigationContainer linking={this.linking}>\r\n            {loggedIn ? (\r\n              <Stack.Navigator initialRouteName=\"Main\">\r\n                <Stack.Screen name=\"Main\" component={Main} />\r\n              </Stack.Navigator>\r\n            ) : (\r\n              <LoginStack />\r\n            )}\r\n          </NavigationContainer>\r\n        </Provider>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}